{##
 # Top categories tree: advanced (2-level) multicolumn layout
 #
#}
{% apply spaceless %}
  {% if this.isSubtree() %}
    {% if this.get('parent_category').depth == 1 %}
      <div class="multicol-block sublevel advanced-multicol" style="width:{{ this.multicolFlyoutBlockWidth(this.get('parent_category').flyoutColumns, this.get('parent_category').subcategoriesCount) }}px;">
    {% endif %}
  {% endif %}

  {% if this.isSubtree() %}
  <ul class="multicol
    {% if this.get('parent_category').depth == 0 %} multicol--type--vertical{% endif %}
    {% if not this.isSubtree() %} catalog-categories catalog-categories-tree {% endif %}
    {% if this.get('parent_category').depth == 2 %}deepest{% endif %}
{#    {% if this.get('parent_category').depth > 2 %} deepest-flyout{% endif %}#}
    "
    {% if this.get('parent_category').depth == 1 %} style="width:{{ this.getColumnWidth() }}px;"{% endif %}>
  {% endif %}

  {% for idx, _category in this.getCategories(this.rootId) %}

  <li {{ this.displayItemClass(idx, loop.length, _category)|raw }}>
    <a href="{{ _category.link }}" {{ this.displayLinkClass(idx, loop.length, _category)|raw }} title="{{ _category.name }}">
            <span class="category-label">
                {{ _category.name }}{% if this.isShowProductNum() %} ({{ _category.productsNum }}){% endif %}
            </span>
    </a>
    {% if _category.depth < 2 and _category.flyoutColumns > 0 and _category.subcategoriesCount > 0 and not this.isRootOnly() %}
      {{ widget(template=this.getBody(), parent_category=_category, rootId=_category.id, is_subtree='1') }}
    {% endif %}
  </li>

  {% if this.isMulticolGap(loop.index0, this.get('parent_category').flyoutColumns, loop.length) and this.isSubtree() %}
  {% if _category.depth < 3 %}
  </ul><ul class="multicol" {% if _category.depth == 2 %} style="width:{{ this.getColumnWidth() }}px;"{% endif %}>
  {% endif %}
  {% if _category.depth > 3 and _category.depth < 4 and loop.last %}
  </ul><ul class="multicol" {% if _category.depth == 2 %} style="width:{{ this.getColumnWidth() }}px;"{% endif %}>
  {% endif %}
  {% endif %}

  {% endfor %}

  {% for idx, w in this.getViewList('topCategories.children', {'rootId': this.getParam('rootId'), 'is_subtree': this.getParam('is_subtree')}) %}
    <li {{ this.displayListItemClass(idx, loop.length, w)|raw }}>{{ w.display() }}</li>
  {% endfor %}

  {% if this.isSubtree() %}
  </ul>
  {% endif %}
  {% if this.isSubtree() %}
    {% if this.get('parent_category').depth == 1 %}
      </div>
    {% endif %}
  {% endif %}
{% endapply %}
